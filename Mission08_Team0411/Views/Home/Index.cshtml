@model List<Mission08_Team0411.Models.ToDo>

@if (Model == null)
{
    <h2>Error: Model is null</h2>
}

@{
    ViewData["Title"] = "Home Page";
}

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>Sigma Tasks</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            max-width: 95%;
            margin: auto;
        }

        .row {
            display: flex;
            justify-content: space-between; /* Ensures proper spacing between columns */
            flex-wrap: wrap; /* Allows wrapping when screen size is small */
            margin: 0; /* Removes unnecessary margins between columns */
        }

        .col-2, .col-5 {
            display: flex;
            align-items: center; /* Centers text vertically */
            justify-content: center; /* Centers text horizontally */
            padding: 20px;
        }

        .col-2 {
            border: 2px solid black;
            width: 140px; /* Fixed width */
            min-width: 140px;
            max-width: 140px;
            text-align: center;
            padding: 5px;
            box-sizing: border-box;
            overflow-wrap: break-word;
            white-space: normal;
            display: block;
        }

        /* Resizes the text dynamically */
        .col-2 h3 {
            font-size: clamp(12px, 2.5vw, 18px); /* Auto-resizes based on screen width */
            line-height: 1.1; /* Reduces extra spacing */
        }

        .col-5 {
            border: 2px solid black;
            flex: 1; /* Distributes space evenly between the quadrants */
            display: flex; /* Allows stacking content vertically */
            flex-direction: column; /* Stacks title and list vertically */
            align-items: center; /* Centers the content horizontally */
            justify-content: flex-start; /* Keeps the title at the top */
            padding: 10px;
            min-width: 0; /* Ensures it does not overflow when resizing */
        }

        .col-5 h3 {
            margin-bottom: 10px; /* Adds space between the title and the list */
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        ul li {
            margin-bottom: 10px; /* Adds space between list items */
        }


        /* Make the blank top-left cell follow the same size as other .col-2 */
        .row:first-child .col-2 {
            flex: 0 0 130px; /* Same size as the "IMPORTANT" box */
            max-width: 130px;
        }

        .table-responsive {
            width: 100%; /* Ensures the table expands to fit the container */
            overflow-x: auto; /* Enables horizontal scrolling if the table is too wide */
        }
        
        table {
            width:  100%;
        }
        
        h1, h3, p {
            margin: 0;
        }
    </style>
</head>
<body>
<div class="container">
    
    <!--Heading for Quadrant Box-->
    <div class="row text-center">
        <div class="col-2" style="border: none"><h1></h1></div>
        <div class="col-10"><h1>Time Management Tasks</h1></div>
    </div>

    <!--Titles for URGENT and NOT Urgent Things-->
    <div class="row">
        <div class="col-2" style="border: none;"><h3></h3></div>
        <div class="col-5"><h3>URGENT</h3></div>
        <div class="col-5"><h3>NOT URGENT</h3></div>
    </div>
    
    <!--IMPORTANT Row-->
    <div class="row text-center">
        <div class="col-2"><h3>IMPORTANT</h3></div>
        <div class="col-5">
            <h3 style="color: lightgreen;">Quadrant 1</h3>
            
            <!--Creating table structure for Quadrant 1-->
            <div class="table-responsive">
                <table class="table text-center">
                    <thead class="fw-bold">
                    <tr>
                        <td>Task</td>
                        <td>Due</td>
                        <td>Category</td>
                        <td>Completed</td>
                    </tr>
                    </thead>
                    
                    <!--Calling model and specific structure of DB-->
                    <tbody>
                    @foreach (var task in Model.Where(t => t.Quadrant == 1 && t.Completed == false))
                    {
                        <tr>
                            <td>@task.TaskName</td>
                            <td>@(task.DueDate?.ToString("yyyy-MM-dd") ?? "No Due Date")</td>
                            <td>@(task.Category.CategoryName ?? "No Category")</td>
                            <td>@task.Completed</td>
                            
                            <!--Edit and Delete routes based on TaskId-->
                            <td><a class="btn btn-info" asp-controller="Home" asp-action="Edit" asp-route-id="@task.TaskId">Edit</a></td>
                            <td><a class="btn btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@task.TaskId">Delete</a></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            
        </div>
        <div class="col-5">
            <h3 style="color: lightsalmon;">Quadrant 2</h3>

            <!--Creating table structure for Quadrant 2-->
            <div class="table-responsive">
                <table class="table text-center">
                    <thead class="fw-bold">
                    <tr>
                        <td>Task</td>
                        <td>Due</td>
                        <td>Category</td>
                        <td>Completed</td>
                    </tr>
                    </thead>

                    <!--Calling model and specific structure of DB-->
                    <tbody>
                    @foreach (var task in Model.Where(t => t.Quadrant == 2 && t.Completed == false))
                    {
                        <tr>
                            <td>@task.TaskName</td>
                            <td>@(task.DueDate?.ToString("yyyy-MM-dd") ?? "No Due Date")</td>
                            <td>@(task.Category.CategoryName ?? "No Category")</td>
                            <td>@task.Completed</td>

                            <!--Edit and Delete routes based on TaskId-->
                            <td><a class="btn btn-info" asp-controller="Home" asp-action="Edit" asp-route-id="@task.TaskId">Edit</a></td>
                            <td><a class="btn btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@task.TaskId">Delete</a></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            
        </div>
    </div>
    
    <!--NOT IMPORTANT Row-->
    <div class="row text-center">
        <div class="col-2"><h3>NOT IMPORTANT</h3></div>
        <div class="col-5">
            <h3 style="color: lightblue;">Quadrant 3</h3>

            <!--Creating table structure for Quadrant 3-->
            <div class="table-responsive">
                <table class="table text-center">
                    <thead class="fw-bold">
                    <tr>
                        <td>Task</td>
                        <td>Due</td>
                        <td>Category</td>
                        <td>Completed</td>
                    </tr>
                    </thead>

                    <!--Calling model and specific structure of DB-->
                    <tbody>
                    @foreach (var task in Model.Where(t => t.Quadrant == 3 && t.Completed == false))
                    {
                        <tr>
                            <td>@task.TaskName</td>
                            <td>@(task.DueDate?.ToString("yyyy-MM-dd") ?? "No Due Date")</td>
                            <td>@(task.Category.CategoryName ?? "No Category")</td>
                            <td>@task.Completed</td>
                            
                            <!--Edit and Delete routes based on TaskId-->
                            <td><a class="btn btn-info" asp-controller="Home" asp-action="Edit" asp-route-id="@task.TaskId">Edit</a></td>
                            <td><a class="btn btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@task.TaskId">Delete</a></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            
        </div>
        <div class="col-5">
            <h3 style="color: indianred;">Quadrant 4</h3>

            <!--Creating table structure for Quadrant 4-->
            <div class="table-responsive">
                <table class="table text-center">
                    <thead class="fw-bold">
                    <tr>
                        <td>Task</td>
                        <td>Due</td>
                        <td>Category</td>
                        <td>Completed</td>
                    </tr>
                    </thead>

                    <!--Calling model and specific structure of DB-->
                    <tbody>
                    @foreach (var task in Model.Where(t => t.Quadrant == 4 && t.Completed == false))
                    {
                        <tr>
                            <td>@task.TaskName</td>
                            <td>@(task.DueDate?.ToString("yyyy-MM-dd") ?? "No Due Date")</td>
                            <td>@(task.Category.CategoryName ?? "No Category")</td>
                            <td>@task.Completed</td>

                            <!--Edit and Delete routes based on TaskId-->
                            <td><a class="btn btn-info" asp-controller="Home" asp-action="Edit" asp-route-id="@task.TaskId">Edit</a></td>
                            <td><a class="btn btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@task.TaskId">Delete</a></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            
        </div>
    </div>

    <!--Add button at the bottom of the Quadrants-->
    <br/>
    <div class="col"><a asp-controller="Home" asp-action="Add_Edit" class="btn btn-success btn-lg">Create New Task</a></div>
    <br/><br/>
</div>
</body>
</html>